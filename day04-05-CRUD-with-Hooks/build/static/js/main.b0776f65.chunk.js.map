{"version":3,"sources":["index.js"],"names":["sayHi","person","name","setTimeout","alert","someone","Counter","_useState","useState","_useState2","Object","_Users_hojong_Desktop_project_100days_of_react_day003_hooks_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","time","setTime","_useState3","_useState4","step","setStep","useEffect","id","setInterval","c","clearInterval","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","value","onChange","e","Number","target","ReactDOM","render","_useState5","_useState6","count","setCount","_useState7","_useState8","fruit","setFruit","document","title","concat","console","log","onClick","getElementById"],"mappings":"uMAIA,SAASA,EAAMC,GACb,IAAMC,EAAOD,EAAOC,KACpBC,WAAW,WACTC,MAAM,UAAYF,IAEjB,KAGL,IAAIG,EAAU,CAAEH,KAAM,OAMtB,SAASI,IAAU,IAAAC,EACOC,mBAAS,GADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACVK,EADUH,EAAA,GACJI,EADIJ,EAAA,GAAAK,EAEON,mBAAS,IAFhBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEVE,EAFUD,EAAA,GAEJE,EAFIF,EAAA,GAWjB,OAPAG,oBAAU,WACR,IAAMC,EAAKC,YAAY,WACrBP,EAAQ,SAAAQ,GAAC,OAAIA,EAAIL,KAChB,KACH,OAAO,kBAAMM,cAAcH,KAC1B,CAACH,IAGFO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,SAAOC,MAAOV,EAAMW,SAAU,SAAAC,GAAC,OAAIX,EAAQY,OAAOD,EAAEE,OAAOJ,YAnBjE1B,EAAMK,GAGNL,EADAK,EAAU,CAAEH,KAAM,MA0DlB6B,IAASC,OAAOT,EAAAC,EAAAC,cApChB,WAAiB,IAAAQ,EAGWzB,mBAAS,GAHpB0B,EAAAxB,OAAAC,EAAA,EAAAD,CAAAuB,EAAA,GAGRE,EAHQD,EAAA,GAGDE,EAHCF,EAAA,GAAAG,EAIW7B,mBAAS,sBAJpB8B,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAIRE,EAJQD,EAAA,GAIDE,EAJCF,EAAA,GAqBf,OAdApB,oBAAU,WAERuB,SAASC,MAAT,eAAAC,OAAgCR,EAAhC,UACAhC,WAAW,WACTyC,QAAQC,IAAR,eAAAF,OAA2BR,EAA3B,YACC,OAUHZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBAAgBU,EAAhB,UACAZ,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMV,EAASD,EAAQ,KAAxC,YAEAZ,EAAAC,EAAAC,cAAA,UAAQqB,QAXZ,WACE3C,WAAW,WACTC,MAAM,mBAAqB+B,IAC1B,OAQD,cAEAZ,EAAAC,EAAAC,cAAA,mBAAWc,GACXhB,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMN,EAAS,yBAAhC,gBAEAjB,EAAAC,EAAAC,cAACnB,EAAD,QAKU,MAAWmC,SAASM,eAAe","file":"static/js/main.b0776f65.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nfunction sayHi(person) {\n  const name = person.name\n  setTimeout(() => {\n    alert('Hello, ' + name)\n    // 'Hello' + name\n  }, 3000)\n}\n\nlet someone = { name: 'Dan' }\nsayHi(someone)\n\nsomeone = { name: 'B' }\nsayHi(someone)\n\nfunction Counter() {\n  const [time, setTime] = useState(0)\n  const [step, setStep] = useState(10)\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTime(c => c + step)\n    }, 1000)\n    return () => clearInterval(id)\n  }, [step])\n\n  return (\n    <div>\n      <h1>{time}</h1>\n      <input value={step} onChange={e => setStep(Number(e.target.value))} />\n    </div>\n  )\n}\n\nfunction Index() {\n  // Declare a new state variable, which we'll call \"count\"\n\n  const [count, setCount] = useState(0)\n  const [fruit, setFruit] = useState('banana🍌')\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`\n    setTimeout(() => {\n      console.log(`You clicked ${count} times`)\n    }, 3000)\n  })\n\n  function handleAlertClick() {\n    setTimeout(() => {\n      alert('You clicked on: ' + count)\n    }, 3000)\n  }\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n\n      <button onClick={handleAlertClick}>Show alert</button>\n\n      <p>I like {fruit}</p>\n      <button onClick={() => setFruit('peach!!🍑')}>Change fruit</button>\n\n      <Counter />\n    </div>\n  )\n}\n\nReactDOM.render(<Index />, document.getElementById('root'))\n"],"sourceRoot":""}