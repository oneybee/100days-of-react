{"version":3,"sources":["Table.js","AddMemoForm.js","EditMemoForm.js","index.js"],"names":["Table","props","react_default","a","createElement","className","memo","length","map","key","id","category","content","onClick","editMemo","deleteMemo","AddMemoForm","initialFormState","_useState","useState","_useState2","Object","slicedToArray","addMemo","setAddMemo","InputChange","event","_event$target","target","name","value","objectSpread","defineProperty","onSubmit","preventDefault","type","onChange","EditMemoForm","currentMemo","setMemo","handleInputChange","updateMemo","setEditing","ReactDOM","render","memos","setMemos","_useState3","_useState4","editing","_useState5","_useState6","setCurrentMemo","src_EditMemoForm","updatedMemo","src_AddMemoForm","concat","toConsumableArray","src_Table","filter","document","getElementById"],"mappings":"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","file":"static/js/main.4e026eaf.chunk.js","sourcesContent":["import React, { Component, useState } from 'react'\nimport './index.css'\n\n// class Table extends Component {\n//   render(props) {\n//     return (\n\nconst Table = props => (\n  <table>\n    <div className=\"tableIndex\">\n      <td className=\"tablePadding-title\">Category</td>\n      <td className=\"tablePadding-title\">Content</td>\n    </div>\n\n    {props.memo.length > 0 ? (\n      props.memo.map(memo => (\n        <div key={memo.id}>\n          <td className=\"tablePadding\">\n            {/* {this.props.category} */}\n            {memo.category}\n          </td>\n          <td className=\"tablePadding\">\n            {/* {this.props.content} */}\n            {memo.content}\n          </td>\n          <td className=\"tablePadding\">\n            <button\n              onClick={() => {\n                props.editMemo(memo)\n              }}\n            >\n              Edit\n            </button>\n            <button onClick={() => props.deleteMemo(memo.id)}>Delete</button>\n          </td>\n        </div>\n      ))\n    ) : (\n      <div>\n        <td>No users</td>\n      </div>\n    )}\n  </table>\n)\n\n//     )\n//   }\n// }\n\nexport default Table\n","import React, { useState } from 'react'\n\nconst AddMemoForm = props => {\n  const initialFormState = { id: null, category: '', content: '' }\n  const [addMemo, setAddMemo] = useState(initialFormState)\n\n  const InputChange = event => {\n    const { name, value } = event.target\n\n    setAddMemo({ ...addMemo, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n        if (!addMemo.category || !addMemo.content) return\n\n        props.addMemo(addMemo)\n        setAddMemo(initialFormState)\n      }}\n    >\n      <label>category</label>\n      <input type=\"text\" name=\"category\" value={addMemo.category} onChange={InputChange} />\n      <label>content</label>\n      <input type=\"text\" name=\"content\" value={addMemo.content} onChange={InputChange} />\n      <button>Add new memo</button>\n    </form>\n  )\n}\n\nexport default AddMemoForm\n","import React, { useState, useEffect } from 'react'\n\nconst EditMemoForm = props => {\n  const [memo, setMemo] = useState(props.currentMemo)\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setMemo({ ...memo, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n\n        props.updateMemo(memo.id, memo)\n      }}\n    >\n      <label>category</label>\n      <input type=\"text\" name=\"category\" value={memo.category} onChange={handleInputChange} />\n\n      <label>content</label>\n      <input type=\"text\" name=\"content\" value={memo.content} onChange={handleInputChange} />\n\n      <button>Update user</button>\n      <button onClick={() => props.setEditing(false)}>Cancel</button>\n    </form>\n  )\n}\n\nexport default EditMemoForm\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Table from './Table'\nimport AddMemoForm from './AddMemoForm'\nimport EditMemoForm from './EditMemoForm'\n\nconst Index = props => {\n  const memosData = [{ id: 1, category: 'todo', content: 'hair cut' }, { id: 2, category: 'meeting', content: 'with tom' }]\n\n  const [memos, setMemos] = useState(memosData)\n\n  const addMemo = memo => {\n    memo.id = memos.length + 1\n    setMemos([...memos, memo])\n  }\n\n  const deleteMemo = id => {\n    setMemos(memos.filter(memo => memo.id !== id))\n  }\n\n  // edit\n  const [editing, setEditing] = useState(false)\n\n  const initialFormState = { id: null, category: '', content: '' }\n\n  const [currentMemo, setCurrentMemo] = useState(initialFormState)\n\n  const editMemo = memo => {\n    setEditing(true)\n\n    setCurrentMemo({ id: memo.id, category: memo.category, content: memo.content })\n  }\n\n  const updateMemo = (id, updatedMemo) => {\n    setEditing(false)\n\n    setMemos(memos.map(memo => (memo.id === id ? updatedMemo : memo)))\n  }\n\n  return (\n    <div>\n      <h1>Memo app with React Hooks</h1>\n\n      {editing ? (\n        <div>\n          <h2 className=\"header\">Edit memo</h2>\n\n          <EditMemoForm\n            editing={editing}\n            setEditing={setEditing}\n            currentMemo={currentMemo}\n            updateMemo={updateMemo}\n            //\n          />\n        </div>\n      ) : (\n        <div>\n          <h2 className=\"header\">Add memo</h2>\n          <AddMemoForm addMemo={addMemo} />\n        </div>\n      )}\n      <br />\n      <h2 className=\"header\">Memo list</h2>\n      <Table\n        memo={memos}\n        deleteMemo={deleteMemo}\n        editMemo={editMemo}\n        //  category={category} content={content}\n      />\n    </div>\n  )\n}\n\nReactDOM.render(<Index />, document.getElementById('root'))\n"],"sourceRoot":""}