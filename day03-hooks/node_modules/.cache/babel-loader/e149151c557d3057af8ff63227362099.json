{"ast":null,"code":"import _slicedToArray from \"/Users/hojong/Desktop/project/100days-of-react/day003-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hojong/Desktop/project/100days-of-react/day003-hooks/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyComponent from './MyComponent';\nimport MyNumber from './MyNumber';\n\nfunction FriendStatus(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOnline = _useState2[0],\n        setIsOnline = _useState2[1];\n\n  useEffect(() => {\n    function handleStatusChange(status) {\n      setIsOnline(status.isOnline);\n    }\n\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n\n  return isOnline ? 'Online' : 'Offline';\n}\n\nfunction Index() {\n  // Declare a new state variable, which we'll call \"count\"\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  const _useState5 = useState('banana'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        fruit = _useState6[0],\n        setFruit = _useState6[1]; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = \"You clicked \".concat(count, \" times\");\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"You clicked \", count, \" times\"), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Click me\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"I like \", fruit), React.createElement(\"button\", {\n    onClick: () => setFruit('peach!!'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Change fruit\"));\n}\n\nReactDOM.render(React.createElement(FriendStatus, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/hojong/Desktop/project/100days-of-react/day003-hooks/src/index.js"],"names":["React","useState","useEffect","ReactDOM","MyComponent","MyNumber","FriendStatus","props","isOnline","setIsOnline","handleStatusChange","status","ChatAPI","subscribeToFriendStatus","friend","id","cleanup","unsubscribeFromFriendStatus","Index","count","setCount","fruit","setFruit","document","title","render","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBACKN,QAAQ,CAAC,IAAD,CADb;AAAA;AAAA,QACpBO,QADoB;AAAA,QACVC,WADU;;AAG3BP,EAAAA,SAAS,CAAC,MAAM;AACd,aAASQ,kBAAT,CAA4BC,MAA5B,EAAoC;AAClCF,MAAAA,WAAW,CAACE,MAAM,CAACH,QAAR,CAAX;AACD;;AAEDI,IAAAA,OAAO,CAACC,uBAAR,CAAgCN,KAAK,CAACO,MAAN,CAAaC,EAA7C,EAAiDL,kBAAjD,EALc,CAMd;;AACA,WAAO,SAASM,OAAT,GAAmB;AACxBJ,MAAAA,OAAO,CAACK,2BAAR,CAAoCV,KAAK,CAACO,MAAN,CAAaC,EAAjD,EAAqDL,kBAArD;AACD,KAFD;AAGD,GAVQ,CAAT;;AAYA,MAAIF,QAAQ,KAAK,IAAjB,EAAuB;AACrB,WAAO,YAAP;AACD;;AACD,SAAOA,QAAQ,GAAG,QAAH,GAAc,SAA7B;AACD;;AAED,SAASU,KAAT,GAAiB;AACf;AADe,qBAEWjB,QAAQ,CAAC,CAAD,CAFnB;AAAA;AAAA,QAERkB,KAFQ;AAAA,QAEDC,QAFC;;AAAA,qBAGWnB,QAAQ,CAAC,QAAD,CAHnB;AAAA;AAAA,QAGRoB,KAHQ;AAAA,QAGDC,QAHC,kBAKf;;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAqB,IAAAA,QAAQ,CAACC,KAAT,yBAAgCL,KAAhC;AACD,GAHQ,CAAT;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBA,KAAhB,WADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWE,KAAX,CAJF,EAKE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADF;AASD;;AAEDnB,QAAQ,CAACsB,MAAT,CAAgB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAkCF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAAlC","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport MyComponent from './MyComponent'\nimport MyNumber from './MyNumber'\n\nfunction FriendStatus(props) {\n  const [isOnline, setIsOnline] = useState(null)\n\n  useEffect(() => {\n    function handleStatusChange(status) {\n      setIsOnline(status.isOnline)\n    }\n\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange)\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange)\n    }\n  })\n\n  if (isOnline === null) {\n    return 'Loading...'\n  }\n  return isOnline ? 'Online' : 'Offline'\n}\n\nfunction Index() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0)\n  const [fruit, setFruit] = useState('banana')\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`\n  })\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n\n      <p>I like {fruit}</p>\n      <button onClick={() => setFruit('peach!!')}>Change fruit</button>\n    </div>\n  )\n}\n\nReactDOM.render(<FriendStatus />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}