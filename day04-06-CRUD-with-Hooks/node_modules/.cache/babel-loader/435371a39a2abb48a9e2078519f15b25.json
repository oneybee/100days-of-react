{"ast":null,"code":"import _slicedToArray from \"/Users/hojong/Desktop/project/100days-of-react/day003-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hojong/Desktop/project/100days-of-react/day003-hooks/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction sayHi(person) {\n  const name = person.name;\n  setTimeout(() => {\n    alert('Hello, ' + name); // 'Hello' + name\n  }, 3000);\n}\n\nlet someone = {\n  name: 'Dan'\n};\nsayHi(someone);\nsomeone = {\n  name: 'B'\n};\nsayHi(someone);\n\nfunction Counter() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        time = _useState2[0],\n        setTime = _useState2[1];\n\n  const _useState3 = useState(10),\n        _useState4 = _slicedToArray(_useState3, 2),\n        step = _useState4[0],\n        setStep = _useState4[1];\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTime(c => c + step);\n    }, 1000);\n    return () => clearInterval(id);\n  }, [step]);\n  console.log(e.target.value);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, time), React.createElement(\"input\", {\n    value: step,\n    onChange: e => setStep(Number(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}\n\nfunction Index() {\n  // Declare a new state variable, which we'll call \"count\"\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState('banana🍌'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        fruit = _useState8[0],\n        setFruit = _useState8[1]; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = \"You clicked \".concat(count, \" times\");\n    setTimeout(() => {\n      console.log(\"You clicked \".concat(count, \" times\"));\n    }, 3000);\n  });\n\n  function handleAlertClick() {\n    setTimeout(() => {\n      alert('You clicked on: ' + count);\n    }, 3000);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"You clicked \", count, \" times\"), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Click me\"), React.createElement(\"button\", {\n    onClick: handleAlertClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Show alert\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"I like \", fruit), React.createElement(\"button\", {\n    onClick: () => setFruit('peach!!🍑'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Change fruit\"), React.createElement(Counter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(Index, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/hojong/Desktop/project/100days-of-react/day003-hooks/src/index.js"],"names":["React","useState","useEffect","ReactDOM","sayHi","person","name","setTimeout","alert","someone","Counter","time","setTime","step","setStep","id","setInterval","c","clearInterval","console","log","e","target","value","Number","Index","count","setCount","fruit","setFruit","document","title","handleAlertClick","render","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nfunction sayHi(person) {\n  const name = person.name\n  setTimeout(() => {\n    alert('Hello, ' + name)\n    // 'Hello' + name\n  }, 3000)\n}\n\nlet someone = { name: 'Dan' }\nsayHi(someone)\n\nsomeone = { name: 'B' }\nsayHi(someone)\n\nfunction Counter() {\n  const [time, setTime] = useState(0)\n  const [step, setStep] = useState(10)\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTime(c => c + step)\n    }, 1000)\n    return () => clearInterval(id)\n  }, [step])\n  console.log(e.target.value)\n\n  return (\n    <div>\n      <h1>{time}</h1>\n      <input value={step} onChange={e => setStep(Number(e.target.value))} />\n    </div>\n  )\n}\n\nfunction Index() {\n  // Declare a new state variable, which we'll call \"count\"\n\n  const [count, setCount] = useState(0)\n  const [fruit, setFruit] = useState('banana🍌')\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`\n    setTimeout(() => {\n      console.log(`You clicked ${count} times`)\n    }, 3000)\n  })\n\n  function handleAlertClick() {\n    setTimeout(() => {\n      alert('You clicked on: ' + count)\n    }, 3000)\n  }\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n\n      <button onClick={handleAlertClick}>Show alert</button>\n\n      <p>I like {fruit}</p>\n      <button onClick={() => setFruit('peach!!🍑')}>Change fruit</button>\n\n      <Counter />\n    </div>\n  )\n}\n\nReactDOM.render(<Index />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}